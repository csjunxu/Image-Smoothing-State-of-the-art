% example: edge-preserving smoothing
% figure 1 in our paper

clear,close;

GT_Original_image_dir = 'Real_ccnoise_denoised_part/';
GT_fpath   = fullfile(GT_Original_image_dir, '*mean.png');
TT_Original_image_dir = 'Real_ccnoise_denoised_part/';
TT_fpath   = fullfile(TT_Original_image_dir, '*real.png');
GT_im_dir  = dir(GT_fpath);
TT_im_dir  = dir(TT_fpath);
im_num     = length(TT_im_dir);

 for i = 1:im_num
                Par.image = i;
                Par.nlsp  =  70;                           % Initial Non-local Patch number
                Par.I = double( imread(fullfile(GT_Original_image_dir, GT_im_dir(i).name)) );
                S = regexp(GT_im_dir(i).name, '\.', 'split');
                fprintf('%s :\n', GT_im_dir(i).name);
                [h, w, ch] = size(Par.I);
                Par.nim = double( imread(fullfile(TT_Original_image_dir, TT_im_dir(i).name)) );
                for c = 1:ch
                    Par.nSig0(c,1) = NoiseEstimation(Par.nim(:, :, c), Par.ps);
                end
                fprintf('The noise levels are %2.2f, %2.2f, %2.2f. \n', Par.nSig0(1), Par.nSig0(2), Par.nSig0(3) );
                PSNR = csnr( Par.nim, Par.I, 0, 0 );
                SSIM = cal_ssim( Par.nim, Par.I, 0, 0 );
                fprintf('The initial value of PSNR = %2.4f, SSIM = %2.4f \n', PSNR,SSIM);
                time0 = clock;
                [im_out, Par] = MCWNNM_ADMM1_NL_Denoising( Par.nim, Par.I, Par ); % WNNM denoisng function
                fprintf('Total elapsed time = %f s\n', (etime(clock,time0)) );
                im_out(im_out>255) = 255;
                im_out(im_out<0)   = 0;
                % calculate the PSNR
                Par.PSNR(Par.Iter, Par.image)  =  csnr( im_out, Par.I, 0, 0 );
                Par.SSIM(Par.Iter, Par.image)  =  cal_ssim( im_out, Par.I, 0, 0 );
                % imname = sprintf(['../../cc_Results/' Par.method '_NL_CC15_' Par.model '_Oite' num2str(Par.Iter) '_Iite' num2str(Par.maxIter) '_rho' num2str(rho) '_mu' num2str(Par.mu) '_lambda' num2str(lambda) '_' TT_im_dir(i).name]);
                % imwrite(im_out/255, imname);
                fprintf('%s : PSNR = %2.4f, SSIM = %2.4f \n',TT_im_dir(i).name, Par.PSNR(Par.Iter, Par.image),Par.SSIM(Par.Iter, Par.image)     );
 end
            
I = double(imread('.\img_smoothing\cat.bmp')) / 255;
p = I;
r = 4; % try r=2, 4, or 8
eps = 0.2^2; % try eps=0.1^2, 0.2^2, 0.4^2

q = guidedfilter(I, p, r, eps);

figure();
imshow([I, q], [0, 1]);
